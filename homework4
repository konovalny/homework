{
  "cells": [
    {
      "cell_type": "markdown",
      "id": "04b9d9e9",
      "metadata": {
        "id": "04b9d9e9"
      },
      "source": [
        "# Seed"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d3ed0bfa",
      "metadata": {
        "id": "d3ed0bfa"
      },
      "outputs": [],
      "source": [
        "import random\n",
        "import numpy as np\n",
        "\n",
        "\n",
        "seed = 3\n",
        "random.seed(seed)\n",
        "np.random.seed(seed)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "b645ec0c",
      "metadata": {
        "id": "b645ec0c"
      },
      "source": [
        "# Data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d294868e",
      "metadata": {
        "id": "d294868e"
      },
      "outputs": [],
      "source": [
        "from sklearn.datasets import fetch_20newsgroups\n",
        "\n",
        "\n",
        "data = fetch_20newsgroups(subset='train', remove=('headers', 'footers', 'quotes'))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "3313cddb",
      "metadata": {
        "id": "3313cddb",
        "outputId": "981d0b45-c6f8-45da-ab6f-a6370611a545"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "377"
            ]
          },
          "execution_count": 3,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "np.unique(data.target, return_counts=True)[1].min()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "e393b13c",
      "metadata": {
        "id": "e393b13c",
        "outputId": "daf3ba6d-0b10-4e37-ca9f-1de39b93b7a1"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "600"
            ]
          },
          "execution_count": 4,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "np.unique(data.target, return_counts=True)[1].max()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "c5439394",
      "metadata": {
        "id": "c5439394"
      },
      "source": [
        "# Vectorize"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "06369b12",
      "metadata": {
        "scrolled": true,
        "id": "06369b12"
      },
      "outputs": [],
      "source": [
        "from sklearn.feature_extraction.text import CountVectorizer\n",
        "from nltk.stem.snowball import EnglishStemmer\n",
        "    \n",
        "\n",
        "stemmer = EnglishStemmer()\n",
        "analyzer = CountVectorizer().build_analyzer()\n",
        "vectorizer = CountVectorizer(lowercase=True, \n",
        "                             stop_words=\"english\",\n",
        "                             analyzer=lambda doc: (stemmer.stem(word) for word in analyzer(doc)),\n",
        "                             max_df=600, min_df=50, \n",
        "                             binary=True)\n",
        "vectorizer.fit(data.data)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "6344505b",
      "metadata": {
        "id": "6344505b"
      },
      "outputs": [],
      "source": [
        "data_v = vectorizer.fit_transform(data.data).toarray()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "6e9e85cf",
      "metadata": {
        "id": "6e9e85cf"
      },
      "source": [
        "# Model"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "232f202a",
      "metadata": {
        "id": "232f202a"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "from IPython.display import clear_output\n",
        "from IPython.display import display\n",
        "\n",
        "\n",
        "class LDA_with_GibbsSampling:\n",
        "    def __init__(self, n_topic=20, n_iter=100, alpha=1, beta=1):\n",
        "        self.n_topic = n_topic\n",
        "        self.n_iter = n_iter\n",
        "        self.alpha = 1\n",
        "        self.beta = 1\n",
        "        \n",
        "        \n",
        "    def train(self, data):\n",
        "        document, word = data.nonzero()\n",
        "        z = np.random.choice(self.n_topic, document.shape[0])\n",
        "        n_dk = np.zeros((document.shape[0], self.n_topic))\n",
        "        n_kw = np.zeros((self.n_topic, word.shape[0]))\n",
        "        n_k  = np.zeros(self.n_topic)\n",
        "        alpha = np.full(self.n_topic, self.alpha)\n",
        "        beta = np.full(data.shape[1], self.beta)\n",
        "        \n",
        "        for i, j, k in zip(document, word, z):\n",
        "            n_dk[i, k] += 1 \n",
        "            n_kw[k, j] += 1\n",
        "            n_k[k] += 1\n",
        "        \n",
        "        progress = lambda i, n: [clear_output(wait=True), print('Iteration: %d/%d' % (i + 1, n))]\n",
        "        for iteration in range(self.n_iter):\n",
        "            progress(iteration, self.n_iter)\n",
        "            for i in range(word.shape[0]):\n",
        "                n_dk[document[i], z[i]] -= 1\n",
        "                n_kw[z[i], word[i]] -= 1\n",
        "                n_k[z[i]] -= 1\n",
        "                \n",
        "                p = (n_dk[document[i]] + alpha) * (n_kw[:, word[i]] + beta[word[i]]) / (n_k + beta.sum())\n",
        "                z[i] = np.random.choice(np.arange(self.n_topic), p=p / p.sum())\n",
        "                \n",
        "                n_dk[document[i], z[i]] += 1\n",
        "                n_kw[z[i], word[i]] += 1\n",
        "                n_k[z[i]] += 1\n",
        "        \n",
        "        self.data = data\n",
        "        self.n_dk = n_dk\n",
        "        self.n_kw = n_kw\n",
        "        self.n_k = n_k\n",
        "        self.z = z\n",
        "        \n",
        "        \n",
        "    def result(self, vectorizer):\n",
        "        clear_output(wait=True)\n",
        "        top_words = []\n",
        "        result = np.argsort(self.n_kw, axis=1)[:, -10:]\n",
        "        \n",
        "        for i in range(self.n_topic):\n",
        "            words = np.zeros(self.data.shape[1]).reshape(1, -1)\n",
        "            for j in result[i]:\n",
        "                words[0, j] = 1\n",
        "            top_words.append(vectorizer.inverse_transform(words)[0])\n",
        "        \n",
        "        top_words = np.array(top_words)\n",
        "        self.top_words = top_words\n",
        "        display(pd.DataFrame(data=top_words.T, columns=['Topic: %d' % i for i in range(self.n_topic)]))"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "2255258e",
      "metadata": {
        "id": "2255258e"
      },
      "source": [
        "# Result"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "e5369596",
      "metadata": {
        "scrolled": true,
        "id": "e5369596",
        "outputId": "651b6f65-6a92-4355-8263-c220adc5f0f5"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Topic: 0</th>\n",
              "      <th>Topic: 1</th>\n",
              "      <th>Topic: 2</th>\n",
              "      <th>Topic: 3</th>\n",
              "      <th>Topic: 4</th>\n",
              "      <th>Topic: 5</th>\n",
              "      <th>Topic: 6</th>\n",
              "      <th>Topic: 7</th>\n",
              "      <th>Topic: 8</th>\n",
              "      <th>Topic: 9</th>\n",
              "      <th>Topic: 10</th>\n",
              "      <th>Topic: 11</th>\n",
              "      <th>Topic: 12</th>\n",
              "      <th>Topic: 13</th>\n",
              "      <th>Topic: 14</th>\n",
              "      <th>Topic: 15</th>\n",
              "      <th>Topic: 16</th>\n",
              "      <th>Topic: 17</th>\n",
              "      <th>Topic: 18</th>\n",
              "      <th>Topic: 19</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>bike</td>\n",
              "      <td>ago</td>\n",
              "      <td>allow</td>\n",
              "      <td>agre</td>\n",
              "      <td>behind</td>\n",
              "      <td>11</td>\n",
              "      <td>becom</td>\n",
              "      <td>bibl</td>\n",
              "      <td>1993</td>\n",
              "      <td>chip</td>\n",
              "      <td>guess</td>\n",
              "      <td>board</td>\n",
              "      <td>american</td>\n",
              "      <td>arab</td>\n",
              "      <td>articl</td>\n",
              "      <td>advanc</td>\n",
              "      <td>anyway</td>\n",
              "      <td>cost</td>\n",
              "      <td>box</td>\n",
              "      <td>ago</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>car</td>\n",
              "      <td>big</td>\n",
              "      <td>applic</td>\n",
              "      <td>argument</td>\n",
              "      <td>came</td>\n",
              "      <td>12</td>\n",
              "      <td>caus</td>\n",
              "      <td>christ</td>\n",
              "      <td>address</td>\n",
              "      <td>clipper</td>\n",
              "      <td>hear</td>\n",
              "      <td>card</td>\n",
              "      <td>constitut</td>\n",
              "      <td>attack</td>\n",
              "      <td>book</td>\n",
              "      <td>anybodi</td>\n",
              "      <td>bad</td>\n",
              "      <td>data</td>\n",
              "      <td>current</td>\n",
              "      <td>bank</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>engin</td>\n",
              "      <td>buy</td>\n",
              "      <td>code</td>\n",
              "      <td>assum</td>\n",
              "      <td>home</td>\n",
              "      <td>14</td>\n",
              "      <td>effect</td>\n",
              "      <td>christian</td>\n",
              "      <td>april</td>\n",
              "      <td>data</td>\n",
              "      <td>heard</td>\n",
              "      <td>disk</td>\n",
              "      <td>countri</td>\n",
              "      <td>countri</td>\n",
              "      <td>check</td>\n",
              "      <td>appreci</td>\n",
              "      <td>care</td>\n",
              "      <td>develop</td>\n",
              "      <td>design</td>\n",
              "      <td>caus</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>front</td>\n",
              "      <td>compani</td>\n",
              "      <td>function</td>\n",
              "      <td>cannot</td>\n",
              "      <td>left</td>\n",
              "      <td>24</td>\n",
              "      <td>hand</td>\n",
              "      <td>church</td>\n",
              "      <td>contact</td>\n",
              "      <td>encrypt</td>\n",
              "      <td>kind</td>\n",
              "      <td>mac</td>\n",
              "      <td>crime</td>\n",
              "      <td>govern</td>\n",
              "      <td>list</td>\n",
              "      <td>card</td>\n",
              "      <td>feel</td>\n",
              "      <td>earth</td>\n",
              "      <td>electron</td>\n",
              "      <td>effect</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>light</td>\n",
              "      <td>cost</td>\n",
              "      <td>server</td>\n",
              "      <td>claim</td>\n",
              "      <td>move</td>\n",
              "      <td>30</td>\n",
              "      <td>less</td>\n",
              "      <td>god</td>\n",
              "      <td>nation</td>\n",
              "      <td>govern</td>\n",
              "      <td>mayb</td>\n",
              "      <td>memori</td>\n",
              "      <td>govern</td>\n",
              "      <td>isra</td>\n",
              "      <td>newsgroup</td>\n",
              "      <td>dos</td>\n",
              "      <td>mayb</td>\n",
              "      <td>larg</td>\n",
              "      <td>input</td>\n",
              "      <td>gordon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>mile</td>\n",
              "      <td>free</td>\n",
              "      <td>softwar</td>\n",
              "      <td>clear</td>\n",
              "      <td>next</td>\n",
              "      <td>game</td>\n",
              "      <td>level</td>\n",
              "      <td>jesus</td>\n",
              "      <td>organ</td>\n",
              "      <td>key</td>\n",
              "      <td>pretti</td>\n",
              "      <td>monitor</td>\n",
              "      <td>gun</td>\n",
              "      <td>israel</td>\n",
              "      <td>refer</td>\n",
              "      <td>driver</td>\n",
              "      <td>oh</td>\n",
              "      <td>low</td>\n",
              "      <td>level</td>\n",
              "      <td>medic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>ride</td>\n",
              "      <td>money</td>\n",
              "      <td>sourc</td>\n",
              "      <td>definit</td>\n",
              "      <td>night</td>\n",
              "      <td>play</td>\n",
              "      <td>particular</td>\n",
              "      <td>life</td>\n",
              "      <td>present</td>\n",
              "      <td>phone</td>\n",
              "      <td>quit</td>\n",
              "      <td>offer</td>\n",
              "      <td>law</td>\n",
              "      <td>jew</td>\n",
              "      <td>repli</td>\n",
              "      <td>email</td>\n",
              "      <td>won</td>\n",
              "      <td>nasa</td>\n",
              "      <td>low</td>\n",
              "      <td>normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>road</td>\n",
              "      <td>pay</td>\n",
              "      <td>sun</td>\n",
              "      <td>exampl</td>\n",
              "      <td>told</td>\n",
              "      <td>player</td>\n",
              "      <td>result</td>\n",
              "      <td>man</td>\n",
              "      <td>report</td>\n",
              "      <td>public</td>\n",
              "      <td>rememb</td>\n",
              "      <td>price</td>\n",
              "      <td>polit</td>\n",
              "      <td>kill</td>\n",
              "      <td>send</td>\n",
              "      <td>hi</td>\n",
              "      <td>wouldn</td>\n",
              "      <td>orbit</td>\n",
              "      <td>note</td>\n",
              "      <td>sever</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>speed</td>\n",
              "      <td>price</td>\n",
              "      <td>user</td>\n",
              "      <td>exist</td>\n",
              "      <td>took</td>\n",
              "      <td>season</td>\n",
              "      <td>signific</td>\n",
              "      <td>religion</td>\n",
              "      <td>servic</td>\n",
              "      <td>secret</td>\n",
              "      <td>seen</td>\n",
              "      <td>sale</td>\n",
              "      <td>protect</td>\n",
              "      <td>land</td>\n",
              "      <td>subject</td>\n",
              "      <td>info</td>\n",
              "      <td>wrong</td>\n",
              "      <td>project</td>\n",
              "      <td>signal</td>\n",
              "      <td>she</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>turn</td>\n",
              "      <td>worth</td>\n",
              "      <td>version</td>\n",
              "      <td>given</td>\n",
              "      <td>went</td>\n",
              "      <td>team</td>\n",
              "      <td>studi</td>\n",
              "      <td>word</td>\n",
              "      <td>univers</td>\n",
              "      <td>secur</td>\n",
              "      <td>stuff</td>\n",
              "      <td>ship</td>\n",
              "      <td>weapon</td>\n",
              "      <td>war</td>\n",
              "      <td>write</td>\n",
              "      <td>version</td>\n",
              "      <td>yes</td>\n",
              "      <td>space</td>\n",
              "      <td>switch</td>\n",
              "      <td>soon</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Topic: 0 Topic: 1  Topic: 2  Topic: 3 Topic: 4 Topic: 5    Topic: 6  \\\n",
              "0     bike      ago     allow      agre   behind       11       becom   \n",
              "1      car      big    applic  argument     came       12        caus   \n",
              "2    engin      buy      code     assum     home       14      effect   \n",
              "3    front  compani  function    cannot     left       24        hand   \n",
              "4    light     cost    server     claim     move       30        less   \n",
              "5     mile     free   softwar     clear     next     game       level   \n",
              "6     ride    money     sourc   definit    night     play  particular   \n",
              "7     road      pay       sun    exampl     told   player      result   \n",
              "8    speed    price      user     exist     took   season    signific   \n",
              "9     turn    worth   version     given     went     team       studi   \n",
              "\n",
              "    Topic: 7 Topic: 8 Topic: 9 Topic: 10 Topic: 11  Topic: 12 Topic: 13  \\\n",
              "0       bibl     1993     chip     guess     board   american      arab   \n",
              "1     christ  address  clipper      hear      card  constitut    attack   \n",
              "2  christian    april     data     heard      disk    countri   countri   \n",
              "3     church  contact  encrypt      kind       mac      crime    govern   \n",
              "4        god   nation   govern      mayb    memori     govern      isra   \n",
              "5      jesus    organ      key    pretti   monitor        gun    israel   \n",
              "6       life  present    phone      quit     offer        law       jew   \n",
              "7        man   report   public    rememb     price      polit      kill   \n",
              "8   religion   servic   secret      seen      sale    protect      land   \n",
              "9       word  univers    secur     stuff      ship     weapon       war   \n",
              "\n",
              "   Topic: 14 Topic: 15 Topic: 16 Topic: 17 Topic: 18 Topic: 19  \n",
              "0     articl    advanc    anyway      cost       box       ago  \n",
              "1       book   anybodi       bad      data   current      bank  \n",
              "2      check   appreci      care   develop    design      caus  \n",
              "3       list      card      feel     earth  electron    effect  \n",
              "4  newsgroup       dos      mayb      larg     input    gordon  \n",
              "5      refer    driver        oh       low     level     medic  \n",
              "6      repli     email       won      nasa       low    normal  \n",
              "7       send        hi    wouldn     orbit      note     sever  \n",
              "8    subject      info     wrong   project    signal       she  \n",
              "9      write   version       yes     space    switch      soon  "
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "n_topic = len(data.target_names)\n",
        "n_iter = 100\n",
        "\n",
        "model = LDA_with_GibbsSampling(n_iter=n_iter, n_topic=n_topic)\n",
        "model.train(data_v)\n",
        "model.result(vectorizer)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "888ca3fe",
      "metadata": {
        "id": "888ca3fe"
      },
      "source": [
        "Исходя из ключевых тем, можно для большинства топиков однозначно определить тему:  \n",
        "  \n",
        "Topic: 0  - 'rec.autos' or 'rec.motorcycles',  \n",
        "Topic: 1  - 'misc.forsale',  \n",
        "Topic: 2  - 'comp.windows.x',  \n",
        "Topic: 5  - 'rec.sport.hockey' or 'rec.sport.baseball',  \n",
        "Topic: 7  - 'soc.religion.christian',  \n",
        "Topic: 8  - 'talk.politics.misc',  \n",
        "Topic: 9  - 'sci.crypt',  \n",
        "Topic: 11 - 'comp.sys.mac.hardware',  \n",
        "Topic: 12 - 'talk.politics.guns',  \n",
        "Topic: 13 - 'talk.politics.mideast',  \n",
        "Topic: 15 - 'comp.sys.ibm.pc.hardware',  \n",
        "Topic: 17 - 'sci.space',  \n",
        "Topic: 18 - 'sci.electronics',  \n",
        "Topic: 19 - 'sci.med'.  "
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.15"
    },
    "colab": {
      "provenance": [],
      "toc_visible": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
